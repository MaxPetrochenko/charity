/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  RewardPoolV1,
  RewardPoolV1Interface,
} from "../../../../contracts/Pools/RewardPool.sol/RewardPoolV1";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "bool",
            name: "hasLockPeriod",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlocksAt",
            type: "uint256",
          },
          {
            internalType: "enum LockPeriod",
            name: "lockPeriod",
            type: "uint8",
          },
        ],
        internalType: "struct RewardData",
        name: "_rewardData",
        type: "tuple",
      },
    ],
    name: "addRewardToPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getRewardPerCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "setRewardFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferRewardToUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000885760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200007f9190620003d9565b60405180910390fd5b6200009981620002d060201b60201c565b50620151806003600060016008811115620000b957620000b8620003f6565b5b6008811115620000ce57620000cd620003f6565b5b81526020019081526020016000208190555062093a806003600060026008811115620000ff57620000fe620003f6565b5b6008811115620001145762000113620003f6565b5b815260200190815260200160002081905550621275006003600060036008811115620001455762000144620003f6565b5b60088111156200015a5762000159620003f6565b5b81526020019081526020016000208190555062278d0060036000600460088111156200018b576200018a620003f6565b5b6008811115620001a0576200019f620003f6565b5b815260200190815260200160002081905550624f1a006003600060056008811115620001d157620001d0620003f6565b5b6008811115620001e657620001e5620003f6565b5b8152602001908152602001600020819055506276a7006003600060066008811115620002175762000216620003f6565b5b60088111156200022c576200022b620003f6565b5b81526020019081526020016000208190555062ed4e0060036000600760088111156200025d576200025c620003f6565b5b6008811115620002725762000271620003f6565b5b8152602001908152602001600020819055506301e1338060036000600880811115620002a357620002a2620003f6565b5b6008811115620002b857620002b7620003f6565b5b81526020019081526020016000208190555062000425565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003c18262000394565b9050919050565b620003d381620003b4565b82525050565b6000602082019050620003f06000830184620003c8565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610ebf80620004356000396000f3fe6080604052600436106100745760003560e01c80637457f8f71161004e5780637457f8f7146100fd5780638da5cb5b14610126578063dfb6881214610151578063f2fde38b1461017a5761007b565b80635a9c80e5146100805780635de16ceb146100a9578063715018a6146100e65761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610ad1565b6101a3565b005b3480156100b557600080fd5b506100d060048036038101906100cb9190610b11565b6101f3565b6040516100dd9190610b4d565b60405180910390f35b3480156100f257600080fd5b506100fb6102ea565b005b34801561010957600080fd5b50610124600480360381019061011f9190610b68565b6102fe565b005b34801561013257600080fd5b5061013b610408565b6040516101489190610bca565b60405180910390f35b34801561015d57600080fd5b5061017860048036038101906101739190610c09565b610431565b005b34801561018657600080fd5b506101a1600480360381019061019c9190610b11565b61085f565b005b6101ab6108e5565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16156102e157600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154816102de9190610c65565b90505b80915050919050565b6102f26108e5565b6102fc600061096c565b565b808373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103389190610bca565b602060405180830381865afa158015610355573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103799190610cab565b101561038457600080fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016103bf929190610cd8565b6020604051808303816000875af11580156103de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104029190610d39565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006040518060a001604052808360000160208101906104519190610b11565b73ffffffffffffffffffffffffffffffffffffffff16815260200183602001602081019061047f9190610d7b565b15158152602001836040013581526020018360200160208101906104a39190610d7b565b6104ae5760006104f9565b600360008560800160208101906104c59190610dcd565b60088111156104d7576104d6610dfa565b5b60088111156104e9576104e8610dfa565b5b8152602001908152602001600020545b81526020018360800160208101906105119190610dcd565b600881111561052357610522610dfa565b5b81525090508060400151816000015173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161056a9190610bca565b602060405180830381865afa158015610587573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ab9190610cab565b10156105b657600080fd5b8060400151816000015173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016105fa929190610e29565b602060405180830381865afa158015610617573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063b9190610cab565b101561064657600080fd5b806000015173ffffffffffffffffffffffffffffffffffffffff166323b872dd333084604001516040518463ffffffff1660e01b815260040161068b93929190610e52565b6020604051808303816000875af11580156106aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ce9190610d39565b506103e860016000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080602001511561076957600360008260800151600881111561073e5761073d610dfa565b5b60088111156107505761074f610dfa565b5b8152602001908152602001600020548160600181815250505b8060026000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908315150217905550604082015181600101556060820151816002015560808201518160030160006101000a81548160ff0219169083600881111561085357610852610dfa565b5b02179055509050505050565b6108676108e5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108d95760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108d09190610bca565b60405180910390fd5b6108e28161096c565b50565b6108ed610a30565b73ffffffffffffffffffffffffffffffffffffffff1661090b610408565b73ffffffffffffffffffffffffffffffffffffffff161461096a5761092e610a30565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109619190610bca565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6882610a3d565b9050919050565b610a7881610a5d565b8114610a8357600080fd5b50565b600081359050610a9581610a6f565b92915050565b6000819050919050565b610aae81610a9b565b8114610ab957600080fd5b50565b600081359050610acb81610aa5565b92915050565b60008060408385031215610ae857610ae7610a38565b5b6000610af685828601610a86565b9250506020610b0785828601610abc565b9150509250929050565b600060208284031215610b2757610b26610a38565b5b6000610b3584828501610a86565b91505092915050565b610b4781610a9b565b82525050565b6000602082019050610b626000830184610b3e565b92915050565b600080600060608486031215610b8157610b80610a38565b5b6000610b8f86828701610a86565b9350506020610ba086828701610a86565b9250506040610bb186828701610abc565b9150509250925092565b610bc481610a5d565b82525050565b6000602082019050610bdf6000830184610bbb565b92915050565b600080fd5b600060a08284031215610c0057610bff610be5565b5b81905092915050565b600060a08284031215610c1f57610c1e610a38565b5b6000610c2d84828501610bea565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c7082610a9b565b9150610c7b83610a9b565b925082610c8b57610c8a610c36565b5b828204905092915050565b600081519050610ca581610aa5565b92915050565b600060208284031215610cc157610cc0610a38565b5b6000610ccf84828501610c96565b91505092915050565b6000604082019050610ced6000830185610bbb565b610cfa6020830184610b3e565b9392505050565b60008115159050919050565b610d1681610d01565b8114610d2157600080fd5b50565b600081519050610d3381610d0d565b92915050565b600060208284031215610d4f57610d4e610a38565b5b6000610d5d84828501610d24565b91505092915050565b600081359050610d7581610d0d565b92915050565b600060208284031215610d9157610d90610a38565b5b6000610d9f84828501610d66565b91505092915050565b60098110610db557600080fd5b50565b600081359050610dc781610da8565b92915050565b600060208284031215610de357610de2610a38565b5b6000610df184828501610db8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082019050610e3e6000830185610bbb565b610e4b6020830184610bbb565b9392505050565b6000606082019050610e676000830186610bbb565b610e746020830185610bbb565b610e816040830184610b3e565b94935050505056fea2646970667358221220043bad19b11b3d3994290b7189ec7b8baec7e7565895f4d0bc69cb86a4b8f22264736f6c63430008180033";

type RewardPoolV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardPoolV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardPoolV1__factory extends ContractFactory {
  constructor(...args: RewardPoolV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RewardPoolV1 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RewardPoolV1__factory {
    return super.connect(runner) as RewardPoolV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardPoolV1Interface {
    return new Interface(_abi) as RewardPoolV1Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RewardPoolV1 {
    return new Contract(address, _abi, runner) as unknown as RewardPoolV1;
  }
}
